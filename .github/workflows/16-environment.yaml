name: 16 - Environment Variables
# This workflow demonstrates using environment variables at various scopes:
# - workflow
# - job
# - step
# It also shows how to pass secrets as environment variables.
# Key concepts explained inline:
# - Environment variables can be defined at multiple levels: workflow, job, step.
# - Job-level env overrides workflow-level env for that job.
# - Step-level env overrides job-level env for that step.
# - Secrets can be passed as environment variables but should be handled carefully to avoid exposure in logs.
# - Using `env` at different levels to manage configuration and sensitive data.
# - Demonstrates best practices for handling secrets in GitHub Actions.
# - Workflow-level env is accessible from any job.
# - Job-level env overrides workflow-level env for that job.
# - Step-level env overrides job-level env for that step.
# - Secrets can be passed as environment variables but should be handled carefully to avoid exposure in logs
# - Using `env` at different levels to manage configuration and sensitive data.
#  - Demonstrates best practices for handling secrets in GitHub Actions.
#  - Workflow-level env is accessible from any job.
#  - Job-level env overrides workflow-level env for that job.

on:
    # Manual trigger from the GitHub UI. Useful for demos and adâ€‘hoc runs.
    workflow_dispatch:
        inputs:
            target-env:
                type: environment
                description: "Select the target environment"
                default: "staging"

jobs:
    echo:
        runs-on: ubuntu-latest
        environment: ${{inputs.target-env}}
        env:
            my_env_value: ${{vars.MY_ENV_VALUE || 'default-value'}}
        steps:
            - name: Echo vars
              run: |
                  echo "Env variable: ${{env.my_env_value}}"
